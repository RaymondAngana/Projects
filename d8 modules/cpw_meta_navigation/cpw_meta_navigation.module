<?php

/**
 * @file
 * Contains cpw_navigation.module.
 */

use Drupal\media\Entity\Media;
use Drupal\media\MediaInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function cpw_meta_navigation_theme_suggestions_paragraph_alter(array &$suggestions, array $variables) {
  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
  $paragraph = $variables['elements']['#paragraph'];

  // Check for whole grain component.
  if ($paragraph->bundle() === 'meta_navigation' && $paragraph->hasField('field_meta_navigation_layouts')) {
    $layout_type = $paragraph->get('field_meta_navigation_layouts')->value ?? 'default';

    // Return hook suggestions based on layout option.
    $suggestions[] = 'paragraph__' . $paragraph->bundle() . '__' . $layout_type;
  }
}

/**
 * Implements hook_preprocess_paragraph__TYPE().
 */
function cpw_meta_navigation_preprocess_paragraph__meta_navigation(&$variables) {
  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
  $paragraph = $variables['elements']['#paragraph'];

  // Get Logo field.
  $logo = $paragraph->get('field_logo');
  $variables['logo_url'] = '';
  if (!empty($logo[0])) {
    $mediaId = $logo->getValue()[0]['target_id'];
    if (isset($mediaId)) {
      $media = Media::load($mediaId);
      if ($media instanceof MediaInterface) {
        $image = $media->image;
        if (!$media->image->isEmpty()) {
          $variables['logo_url'] = file_url_transform_relative(file_create_url($image->entity->getFileUri()));
        }
      }
    }
  }

  // Get Comeback text field.
  $comeback_text = $paragraph->get('field_comeback_text');
  if (!empty($comeback_text[0])) {
    $variables['comeback_text'] = t($comeback_text->getValue()[0]['value']);
  }

  // Get Link field.
  $link = $paragraph->hasField('field_c_link') ? $paragraph->get('field_c_link') : '';
  if (!empty($link[0])) {
    $variables["link_url"] = $link->first()->getUrl();
  }
}
