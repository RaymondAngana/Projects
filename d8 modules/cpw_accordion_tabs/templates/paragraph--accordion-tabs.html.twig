{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% block paragraph %}
  {% block content %}
    <div class="container-fluid">
      <div class="mod mod-promo-ndl-country-selector prm" data-t-name="PromoNdlCountrySelector" data-t-id="{{ paragraph.id() }}">
        <div class="mod mod-country-flag-list" data-t-name="CountryFlagList" data-t-id="11">
          <ul class="mod-promo-ndl-country-selector__tabs" role="tree">
            {% for header in tab_headers %}
              {%  set is_active = loop.index == 1 ? ' is-active' : '' %}
              <li class="mod-promo-ndl-country-selector__tab mod-promo-ndl-country-selector__tab-{{ loop.index }} country-item {{ is_active }}" role="treeitem">
                <a href="#region-{{ paragraph_id ~ '-' ~ loop.index }}" class="country-tab" aria-label="{{ header }}">
                  <span class="sr-only">{{ 'Select to see list of countries for'|t }} {{ header }}</span>{{ header }}
                </a>
              </li>
            {% endfor %}
          </ul>
          <div class="mod-promo-ndl-country-selector__panes">
            <div class="mod-promo-ndl-country-selector__panes-inlay">
              {% for countries in country_tabs %}
                {%  set is_active = loop.index == 1 ? ' is-active' : '' %}
                <div id="region-{{ paragraph_id ~ '-' ~ loop.index }}" class="mod-promo-ndl-country-selector__pane country-tab-content{{ is_active }}">
                  <ul class="mod-promo-ndl-country-selector__country-list">
                    {% for country in countries %}
                      <li class="mod-promo-ndl-country-selector__country-list-item mod-promo-ndl-country-selector__country-list-item-BE region-europe">
                        <div class="flag-element">
                          <a class="flag-container" href="{{ country.cta.uri }}" tabindex="0">
                          <span class="flag-container__image">
                          {% if country.flag %}
                            <picture> <img class="lazy flag" alt="Flag of {{ country.country_name }}" data-srcset="{{ country.flag }}"> </picture>
                          {% endif %}
                          </span>
                            <label>
                              {% if country.cta.title is not empty %}
                                {{ country.cta.title }}
                              {% else %}
                                {{ country.country_name }}
                              {% endif %}
                            </label>
                          </a>
                        </div>
                      </li>
                    {% endfor %}
                  </ul>
                </div>
              {% endfor %}
            </div>
          </div>
        </div>
      </div>
    </div>
  {% endblock %}
{% endblock paragraph %}
