{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% block paragraph %}
  {% block content %}
    <section id="faq-nat" class="block">
      {% if faq_bg is not empty %}
        <div class="container-fluid">
      {% else %}
        <div class="container-fluid">
      {% endif %}
        <div class="mod-tab__right-side">
          {% if content.field_faq_image is not empty %}
            {{ content.field_faq_image }}
          {% endif %}
        </div>
        <div class="container mod-faq-stationary">
          <div class="mod-tab__left-side">
            <section class="mod mod-tab" data-t-name="Tab" data-t-id="14">
              <h2 class=" cross-heading"><span>{{ content.field_faq_title }}</span></h2>
              <div class="mod-tab__background">
                <div class="mod-tab__inlay">
                  {% if faq_anchor is not empty %}
                    <ul class="mod-tab__tabs">
                      <li class="mod-tab__tab is-active"><a href="{{ faq_anchor }}" aria-label="FAQ">{{ 'FAQ'|t }}</a></li>
                    </ul>
                  {% endif %}
                  {% if content.field_faq_items is not empty %}
                    <div class="mod-tab__panes">
                      <div class="mod-tab__panes-inlay">
                        <div id="tab-1" class="mod-tab__pane is-active">
                          <div class="mod mod-faq" data-t-name="Faq" id="faq_component">
                            {{ content.field_faq_items }}
                          </div>
                        </div>
                      </div>
                    </div>
                  {% endif %}
                  {% if faq_cta is not empty %}
                    <a href="{{ faq_cta.uri }}" class="btn btn--secondary" tabindex="0" target="_blank">{{ faq_cta.title }}<span
                      class="sr-only">Press to {{ faq_cta.title }}</span></a>
                  {% endif %}
                </div>
              </div>
            </section>
          </div>
        </div>
      </div>
    </section>
  {% endblock %}
{% endblock paragraph %}
